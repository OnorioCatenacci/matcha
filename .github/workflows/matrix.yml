name: Test Matrix

on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches:
      - release
      - latest

env:
  cache-version: 1
  MIX_ENV: test

concurrency:
  group: suite-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Testing
    runs-on: ubuntu-latest

    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        elixir:
          - "1.10.x"
          - "1.11.x"
          - "1.12.x"
          - "1.13.x"
        otp:
          - "22.x"
          - "23.x"
          - "24.x"
        allow-failure: [false]
        include:
          # Technically unsupported version combinations we allow to fail
          - elixir: "1.10.x"
            otp: "23.x"
            allow-failure: true
          - elixir: "1.10.x"
            otp: "24.x"
            allow-failure: true

    steps:
      - uses: actions/checkout@v2

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore Mix Cache
        id: mix-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: mix install

      - name: Run test suite
        run: mix test

  lints:
    name: Linting
    runs-on: ubuntu-latest

    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        elixir:
          - "1.10.x"
          - "1.11.x"
          - "1.12.x"
          - "1.13.x"
        otp:
          - "22.x"
          - "23.x"
          - "24.x"
        allow-failure: [false]
        include:
          # Technically unsupported version combinations we allow to fail
          - elixir: "1.10.x"
            otp: "23.x"
            allow-failure: true
          - elixir: "1.10.x"
            otp: "24.x"
            allow-failure: true

    steps:
      - uses: actions/checkout@v2

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore Mix Cache
        id: mix-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: mix install

      - name: Run compilation linter
        run: mix lint.compile

  types:
    name: Typechecking
    runs-on: ubuntu-latest

    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        elixir:
          - "1.10.x"
          - "1.11.x"
          - "1.12.x"
          - "1.13.x"
        otp:
          - "22.x"
          - "23.x"
          - "24.x"
        allow-failure: [false]
        include:
          # Technically unsupported version combinations we allow to fail
          - elixir: "1.10.x"
            otp: "23.x"
            allow-failure: true
          - elixir: "1.10.x"
            otp: "24.x"
            allow-failure: true

    steps:
      - uses: actions/checkout@v2

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore Mix Cache
        id: mix-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: mix install

      - name: Retrieve PLT Cache
        id: plt-cache
        uses: actions/cache@v1
        with:
          path: /home/runner/.cache/dialyzer/plts
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup typechecking
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: mix typecheck.cache

      - name: Run typecheck tasks
        run: mix typecheck

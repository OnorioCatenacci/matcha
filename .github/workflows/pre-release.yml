name: Release Validation

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: Release version number component to bump (major|minor|patch)
        required: false
        default: patch

  pull_request:
    branches:
      - release

env:
  preferred-elixir: "1.13.1"
  preferred-otp: "24.2.0"
  default-release-type: "patch"
  cache-version: 2
  commit-author-name: ${{ secrets.ACTIONS_COMMIT_AUTHOR_NAME }}
  commit-author-email: ${{ secrets.ACTIONS_COMMIT_AUTHOR_EMAIL }}
  MIX_ENV: test

concurrency:
  group: pre-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-parameters:
    name: Set Job Parameters
    runs-on: ubuntu-latest

    outputs:
      release-type: ${{ steps.release-type.outputs.name }}

    steps:
      - name: Makes release action parameter available as `needs.set-parameters.outputs.release-type`
        id: release-type
        run: echo "::set-output name=name::${{ github.event.inputs.release-type || env.DEFAULT_RELEASE_TYPE }}"

  validate-parameters:
    name: Validate Job Parameters
    runs-on: ubuntu-latest

    needs:
      - set-parameters

    steps:
      - name: Validate release action parameter
        if: ${{ !contains(fromJson('["major", "minor", "patch"]'), needs.set-parameters.outputs.release-type) }}
        run: |
          echo "
          Provided release action parameter not valid; got "${{ needs.set-parameters.outputs.release-type }}",
          but needed one of (major|minor|patch).
          "; exit 1

  tests:
    name: Testing
    runs-on: ubuntu-latest

    needs:
      - set-parameters
      - validate-parameters

    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        elixir:
          - "1.10.x"
          - "1.11.x"
          - "1.12.x"
          - "1.13.x"
        otp:
          - "22.x"
          - "23.x"
          - "24.x"
        allow-failure: [false]
        include:
          # Technically unsupported version combinations we allow to fail
          - elixir: "1.10.x"
            otp: "23.x"
            allow-failure: true
          - elixir: "1.10.x"
            otp: "24.x"
            allow-failure: true

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release

      - name: Install erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ env.edge-otp }}-${{ env.edge-elixir }}-mix-deps-get-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v1
        with:
          path: _build
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ env.edge-otp }}-${{ env.edge-elixir }}-mix-deps-compile-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Run test suite
        run: mix test

  lints:
    name: Linting
    runs-on: ubuntu-latest

    needs:
      - set-parameters
      - validate-parameters

    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        elixir:
          - "1.10.x"
          - "1.11.x"
          - "1.12.x"
          - "1.13.x"
        otp:
          - "22.x"
          - "23.x"
          - "24.x"
        allow-failure: [false]
        include:
          # Technically unsupported version combinations we allow to fail
          - elixir: "1.10.x"
            otp: "23.x"
            allow-failure: true
          - elixir: "1.10.x"
            otp: "24.x"
            allow-failure: true

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release

      - name: Install erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ env.edge-otp }}-${{ env.edge-elixir }}-mix-deps-get-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v1
        with:
          path: _build
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ env.edge-otp }}-${{ env.edge-elixir }}-mix-deps-compile-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Run compilation linter
        run: mix lint.compile

  types:
    name: Typechecking
    runs-on: ubuntu-latest

    needs:
      - set-parameters
      - validate-parameters

    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        elixir:
          - "1.10.x"
          - "1.11.x"
          - "1.12.x"
          - "1.13.x"
        otp:
          - "22.x"
          - "23.x"
          - "24.x"
        allow-failure: [false]
        include:
          # Technically unsupported version combinations we allow to fail
          - elixir: "1.10.x"
            otp: "23.x"
            allow-failure: true
          - elixir: "1.10.x"
            otp: "24.x"
            allow-failure: true

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release

      - name: Install erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ env.edge-otp }}-${{ env.edge-elixir }}-mix-deps-get-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v1
        with:
          path: _build
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ env.edge-otp }}-${{ env.edge-elixir }}-mix-deps-compile-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Restore mix typecheck cache
        id: mix-typecheck-cache
        uses: actions/cache@v1
        with:
          path: /home/runner/.cache/dialyzer/plts
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ env.edge-otp }}-${{ env.edge-elixir }}-mix-typecheck-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup typechecking
        if: steps.mix-typecheck-cache.cache-hit != 'true'
        run: mix typecheck.cache

      - name: Run typecheck tasks
        run: mix typecheck

  perform-release-dry-run:
    name: Perform Release Dry-Run
    runs-on: ubuntu-latest

    needs:
      - set-parameters
      - validate-parameters
      - tests
      - lints
      - types

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release

      - name: Install erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.preferred-elixir }}
          otp-version: ${{ env.preferred-otp }}

      - name: Restore Mix Cache
        id: mix-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-${{ runner.os }}-${{ env.preferred-otp }}-${{ env.preferred-elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Preview publishing release to hex
        run: |
          mix release.${{ needs.set-parameters.outputs.release-type }} \
            --dry-run \
            --disable-push \
            --disable-test

      - name: Preview publication commit
        run: |
          git diff
          git diff HEAD~1

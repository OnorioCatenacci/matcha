name: Test Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: Release version to publish (no "v" prefix)
        required: true
        default: patch

  pull_request_target:
    branches:
      - release

env:
  release-branch: release
  preferred-elixir: "1.13.x"
  preferred-otp: "24.x"
  default-release-version: "100.10.1"
  cache-version: 2
  commit-author-name: ${{ secrets.ACTIONS_COMMIT_AUTHOR_NAME }}
  commit-author-email: ${{ secrets.ACTIONS_COMMIT_AUTHOR_EMAIL }}
  MIX_ENV: test

concurrency:
  group: test-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-parameters:
    name: Set Job Parameters
    runs-on: ubuntu-latest

    outputs:
      release-version: ${{ steps.release-version.outputs.name }}

    steps:
      - name: Makes release action parameter available as `needs.set-parameters.outputs.release-version`
        id: release-version
        run: echo "::set-output name=name::${{ github.event.inputs.release-version || env.default-release-version }}"

  tests:
    name: Testing
    runs-on: ubuntu-latest

    needs:
      - set-parameters

    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      fail-fast: false
      matrix:
        elixir:
          - "1.10.x"
          - "1.11.x"
          - "1.12.x"
          - "1.13.x"
        otp:
          - "22.x"
          - "23.x"
          - "24.x"
        allow-failure: [false]
        include:
          # Technically unsupported version combinations we allow to fail
          - elixir: "1.10.x"
            otp: "23.x"
            allow-failure: true
          - elixir: "1.10.x"
            otp: "24.x"
            allow-failure: true

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release

      - name: Install erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v1
        with:
          path: _build
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Run test suite
        run: mix test

  types:
    name: Typechecking
    runs-on: ubuntu-latest

    needs:
      - set-parameters

    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        elixir:
          - "1.10.x"
          - "1.11.x"
          - "1.12.x"
          - "1.13.x"
        otp:
          - "22.x"
          - "23.x"
          - "24.x"
        allow-failure: [false]
        include:
          # Technically unsupported version combinations we allow to fail
          - elixir: "1.10.x"
            otp: "23.x"
            allow-failure: true
          - elixir: "1.10.x"
            otp: "24.x"
            allow-failure: true

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release

      - name: Install erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v1
        with:
          path: _build
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Restore mix typecheck cache
        id: mix-typecheck-cache
        uses: actions/cache@v1
        with:
          path: /home/runner/.cache/dialyzer/plts
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}-mix-typecheck-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup typechecking
        if: steps.mix-typecheck-cache.cache-hit != 'true'
        run: mix typecheck.cache

      - name: Run typecheck tasks
        run: mix typecheck

  lints:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.preferred-elixir }}
          otp-version: ${{ env.preferred-otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-${{ env.preferred-otp }}-${{ env.preferred-elixir }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v1
        with:
          path: _build
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-${{ env.preferred-otp }}-${{ env.preferred-elixir }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Run linter tasks
        run: mix lint

  perform-release-dry-run:
    name: Perform Release Dry-Run
    runs-on: ubuntu-latest

    needs:
      - set-parameters
      - tests
      - lints
      - types

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.release-branch }}
          fetch-depth: 0

      - name: Install erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.preferred-elixir }}
          otp-version: ${{ env.preferred-otp }}

      - name: Restore Mix Cache
        id: mix-cache
        uses: actions/cache@v1
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ env.preferred-otp }}-elixir-${{ env.preferred-elixir }}-mix-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Update version number
        run: echo '${{ needs.set-parameters.outputs.release-version }} >> VERSION'

      - name: Preview publishing release to hex
        run: |
          mix hex.publish --dry-run
